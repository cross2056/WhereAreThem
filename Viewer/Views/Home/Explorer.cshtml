@using PureLib.Common
@using WhereAreThem.Model
@using WhereAreThem.Viewer.Models
@model Folder
@{
    string machineName = ViewBag.MachineName;
    List<Folder> stack = ViewBag.Stack;
    ViewBag.Title = (stack == null) ? Extensions.Explorer : "{0} - {1} | {2}".FormatWith(Extensions.Explorer, Model.GetFullPath(stack), machineName);
}

@using (Html.BeginForm()) {
    <div class="header">
        @if (stack != null) {
            @Html.TextBox("searchPattern", null, new { @class = "search" })
        }
        <div class="navigation">
            <div class="machineName">
                <a href="@Url.Action(Extensions.Explorer, new { machineName = machineName })">@machineName</a>
            </div>
            @if (stack != null) {
                for (int i = 0; i < stack.Count;i++ ) {
                    <div class="navigationItem">
                        <span id="@i" class="icon separator"></span>
                    </div>
                    <div class="navigationItem">
                        <a href="@Url.Action(Extensions.Explorer, new { machineName = machineName, path = stack[i].GetFullPath(stack) })">
                            <span class="icon folder item iconText">@stack[i].Name</span>
                        </a>
                    </div>
                    if (i > 0) {
                        <ul id="@string.Format("stack_{0}", i)" class="contextMenu">
                            @foreach (Folder f in stack[i - 1].Folders) {
                                <li class="@(f == stack[i] ? "current" : string.Empty)">
                                    <a href="@Url.Action(Extensions.Explorer, new { machineName = machineName, path = f.GetFullPath(stack.Take(i).ToList()) })">
                                        <span class="icon folder item iconText">@f.Name</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                }
            }
        </div>
    </div>
}

<table class="explorer">
    <thead>
        <tr>
            <th class="name">Name</th>
            <th class="size">Size</th>
            <th class="datetime">Created</th>
            <th class="datetime">Modified</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Folders == null && Model.Files == null) {
            <tr>
                <td colspan="4"><div class="empty">Empty</div></td>
            </tr>
        }
        @if (Model.Folders != null) {
            foreach (Folder f in Model.Folders) {
            <tr>
                <td>
                    <a href="@Url.Action(Extensions.Explorer, new { machineName = machineName, path = stack == null ? f.Name : f.GetFullPath(stack) })">
                        <span class="icon folder item iconText">@f.Name</span>
                    </a>
                </td>
                <td></td>
                <td class="nowrap">@f.CreatedDateUtc.ToLocalTimeString()</td>
                <td></td>
            </tr>
            }
        }
        @if (Model.Files != null) {
            foreach (WhereAreThem.Model.File f in Model.Files) {
            <tr>
                <td>
                    <span class="icon file item iconText">@f.Name</span>
                </td>
                <td class="size nowrap">@Utility.ToFriendlyString(f.Size)</td>
                <td class="nowrap">@f.CreatedDateUtc.ToLocalTimeString()</td>
                <td class="nowrap">@f.ModifiedDateUtc.ToLocalTimeString()</td>
            </tr>
            }
        }
    </tbody>
</table>
